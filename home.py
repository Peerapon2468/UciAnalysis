import streamlit as st
from streamlit_lottie import st_lottie
from streamlit_lottie import st_lottie_spinner
import requests
def load_lottieurl(url: str):
    r = requests.get(url)
    if r.status_code != 200:
        return None
    return r.json()

lottie_url_hello = "https://lottie.host/377a24ee-4e19-48c9-8a2f-fcada962c70a/oax9riei3m.json"
lottie_hello = load_lottieurl(lottie_url_hello)
st_lottie(lottie_hello)

st.subheader("‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏¢‡∏∏‡∏Å‡∏ï‡πå‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Manchine Learning ‡∏ö‡∏ô‡πÄ‡∏ß‡πá‡∏ö")
st.subheader("by ‡∏û‡∏µ‡∏£‡∏û‡∏• ‡∏û‡∏π‡∏•‡∏ï‡∏≤‡∏•")
st.subheader("‡∏™‡∏≤‡∏Ç‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå")
st.subheader("‡∏Ñ‡∏ì‡∏∞‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡πÅ‡∏•‡∏∞‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ")
st.subheader("‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢‡∏£‡∏≤‡∏ä‡∏†‡∏±‡∏è‡∏ô‡∏Ñ‡∏£‡∏õ‡∏ê‡∏°")

st.page_link("home.py", label="‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å", icon="üè†")
st.page_link("pages/Statistic.py", label="‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡πÄ‡∏™‡∏ô‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ñ‡∏±‡πà‡∏ß‡πÅ‡∏´‡πâ‡∏á‡∏î‡πâ‡∏ß‡∏¢‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥", icon="‚ûä")
st.page_link("pages/Chart.py", label="‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡πÄ‡∏™‡∏ô‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ñ‡∏±‡πà‡∏ß‡πÅ‡∏´‡πâ‡∏á‡∏î‡πâ‡∏ß‡∏¢‡∏à‡∏¥‡∏ô‡∏ï‡∏ó‡∏±‡∏®‡∏ô‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•", icon="‚ûã", disabled=False)
st.page_link("pages/KNNClassify.py", label="‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡πÄ‡∏™‡∏ô‡∏≠‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡πÄ‡πÄ‡∏ô‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ñ‡∏±‡πà‡∏ß‡πÄ‡πÄ‡∏´‡πâ‡∏á", icon="‚ûå", disabled=False)
st.page_link("pages/DecisionTreeClassify.py", label="‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡πÄ‡∏™‡∏ô‡∏≠‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡πÄ‡πÄ‡∏ô‡∏Å", icon="‚ûç", disabled=False)
st.page_link("pages/RegressionPrediction.py", label="‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡πÄ‡πÄ‡∏ô‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏ÅRegression", icon="‚ûé", disabled=False)
st.page_link("pages/NaivebayeClassify.py", label="‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡πÄ‡πÄ‡∏ô‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏ÅNaivebaye", icon="‚ûè", disabled=False)
st.page_link("http://www.google.com", label="Google", icon="üåé")
